// ================================
// MIXINS
// ================================

// Focus ring mixin
@mixin focus-ring($color: $focus-ring-color, $width: $focus-ring-width, $offset: $focus-ring-offset) {
  outline: $width solid $color;
  outline-offset: $offset;
  box-shadow: 0 0 0 1px rgba($color, 0.3);
}

// Focus visible state
@mixin focus-visible($color: $focus-ring-color, $width: $focus-ring-width, $offset: $focus-ring-offset) {
  &:focus-visible {
    @include focus-ring($color, $width, $offset);
  }
}

// Clearfix mixin
@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Screen reader only content (but keep it in DOM for accessibility)
@mixin sr-only() {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Visually hidden but still accessible to screen readers
@mixin visually-hidden() {
  @include sr-only();
}

// Container mixin
@mixin container($max-width: $container-desktop) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $spacing-md;
  padding-right: $spacing-md;

  @media (max-width: $breakpoint-mobile) {
    padding-left: $spacing-sm;
    padding-right: $spacing-sm;
  }
}

// Button reset mixin
@mixin button-reset() {
  appearance: none;
  background: transparent;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

// Truncate text
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Responsive breakpoint mixin
@mixin breakpoint($size) {
  @if $size == mobile {
    @media (max-width: #{$breakpoint-mobile - 1px}) { @content; }
  } @else if $size == tablet {
    @media (min-width: $breakpoint-mobile) and (max-width: #{$breakpoint-tablet - 1px}) { @content; }
  } @else if $size == desktop {
    @media (min-width: $breakpoint-desktop) { @content; }
  }
}

// Mobile first breakpoint (max-width)
@mixin breakpoint-down($size) {
  @if $size == tablet {
    @media (max-width: #{$breakpoint-mobile - 1px}) { @content; }
  } @else if $size == desktop {
    @media (max-width: #{$breakpoint-tablet - 1px}) { @content; }
  }
}

// Desktop first breakpoint (min-width) - alias for breakpoint
@mixin breakpoint-up($size) {
  @if $size == tablet {
    @media (min-width: $breakpoint-mobile) { @content; }
  } @else if $size == desktop {
    @media (min-width: $breakpoint-desktop) { @content; }
  }
}
